#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

        clr     r5                      ;index registerini temizledik
        mov     #00h, r6                ;en küçük pozitif sayı
        mov     #07fffh, r7             ;en büyük pozitif sayı
        
basla   tst     2400h(r5)               ;sayıyı kontrol ettik
        jn      m1
        cmp     r6, 2400h(r5)           ;sayı pozitif ise devam ettik
        jn      basla                   
        mov     2400h(r5), r6           ;adresdeki değer daha büyükse r6 ya yazıldı
        jmp     art                     ;indexli adres değerini arttırmak için
                                        ;atladık
        
m1      cmp     r7, 2400h(r5)           ;sayı negatif ise buraya atladık
        jn      art     
        mov     2400h(r5), r7           ;adresdeki değer daha küçükse r7 ye yazıldı
        
art     incd    r5
        cmp     #010h, r5
        jnz     basla
        
        nop

main:   NOP                             ; main program
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer
        JMP $                           ; jump to current location '$'
                                        ; (endless loop)
        END
